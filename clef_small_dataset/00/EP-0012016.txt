<DOC>
<DOCNO>
EP-0012016
</DOCNO>
<TEXT>
<DATE>
19800611
</DATE>
<IPC-CLASSIFICATIONS>
G06F-12/06 G06F-12/14 G06F-12/00 G06F-9/46 G06F-21/00 G06F-21/02 
</IPC-CLASSIFICATIONS>
<TITLE>
memory access control.
</TITLE>
<APPLICANT>
sperry corpus<sep>sperry corporation <sep>sperry corporation1290, avenue of the americasnew york, n.y. 10019us   <sep>
</APPLICANT>
<INVENTOR>
krocheski thomas leeus<sep>thorsrud lee thomasus<sep>krocheski, thomas lee<sep>thorsrud, lee thomas<sep>krocheski, thomas lee11701 galtier driveburnsville, minnesota 55337us<sep>thorsrud, lee thomas1146 palace avenuest. paul, minnesota 55105us<sep>
</INVENTOR>
<ABSTRACT>
a multiported memory module (11) permits memory  access by a plurality of requestors (10) via requestor ports  (13a, 13b; 16a, 16b) and has a priority circuit 100 for determin­ ing priority of access requests.  a status register (21) within the  memory module (11) stores lock-out values to control the  communication between the memory module (11) and the  requestors (10).  the status register (21) may be written into or  read from by the requestors (10).  each bit position (305 to 312)  of the status register (211) is dedicated to a corresponding  requestor port (13a, 13b; 16a 16b).  if a bit position represented  by a flip-flop (305 to 312) contains a binary zero, the corres­ ponding requestor port (13a, 13b; 16a, 16b) operates nor­ mally, but if it contains a binary one, disabled gating means  (411 to 418) prevent the memory module (11) from honouring  an access requests via the corresponding requestor port.   thus one or more of the requestors (10) may be locked out in  response to software instructions.  
</ABSTRACT>
<DESCRIPTION>
memory access control the invention relates to memory access controls in data processing systems. medium and large scale data processing systems now usually include facilities for adding or deleting memory capacity by adding or deleting memory modules. quite often, each memory module has a multiple user interface which gives access to the memory module to several requestors such as processing units, input/output units, etc., through their associated requestor ports within the multiple user interface. the memory module usually honours requests by the requestors for access to specific addressable locations in accordance with an internal priority scheme. different requestors may communicate with one another through data stored within the memory module by using pre-defined protocols, or they may simply share the capacity of the memory module in some pre-defined manner without direct communication. in either case, the usefulness of the memory module to one requestor is partly dependent on the adherence by other requestors to the pre-determined protocol or the pre-defined manner of sharing the memory module. should a requestor not adhere to these predefined procedures, for example because of maifunction, the usefulness of the memory module to the remaining requestors may be jeopardised by the possible undefined accesses to the memory module by that requestor. thus, the problem is how to prevent such a requestor from accessing the memory module, so that the integrity of the data stored in the memory module is preserved. this problem has heretofore been solved by manual intervention such as powering that requestor down or breaking the electrical connection between the requestor concerned and the corresponding requestor port. both these methods tend to be inconvenient and time consuming. moreover, the physical size of the necessary manual switches may be incompatible with stringent packaging requirements. the approach of the present invention involves providing a software controllable way of denying a requestor access to the memory module. gating means are provided, which can be selectively enabled or disabled in response to software instructions, according to whether or not memory access by the requestor concerned is permissible. the present invention thus solves the above stated problem in a way which not only generates small space and power requirements, but provides increased flexibility and facilitates rapid response to changing operating conditions. it moreover lends itself to applications in which a data processing system is unattended. the invention will now be described further by way of example only. for a better understanding of the embodiment which is described in detail below with reference to the drawings, the organisation of that embodiment will first be briefly outlined. the memory module includes a status register, which can be accessed (i.e., read from and written into) by using a pre-defined address, as if it were one of the addressable locations of the memory module. in this way, a requestor (for instance a central processing unit) may modify the contents of the status register by executing specific software instructions. the embodiment also includes a manual mode switch on the memory module which permits selection
</DESCRIPTION>
<CLAIMS>
 claims   1. a data processing system including a memory (11) accessible to a plurality of requestors (10) via respective requestor ports, characterised in that for each requestor port (13a, 13b; 16a, 16b) associated gating means (411 to 418) are provided the selective disabling of which, by a lock-out circuit (21) responsive to software instructions executed by a requestor (10), causes those requestors (10) to be locked out whose requestor ports (13a, 13b); 16a, 16b) are associated with the disabled gating means (13a, 13b; 16a, 16b).   2. a data processing system according to claim 1 characterised in that the lock-out circuit comprises a requestor-addressable status register (21) having storage locations (305 to 312) corresponding to each of the gating means (411 to 418), the contents of the storage locations (305 to 312) being alterable in response to said software instructions and representing a lock-out value for each of said gating means (411 to 418), with the output of each storage location (305 to 312) providing an enabling or disabling signal for the corresponding gating means (411 to 418) according to its contents.   3. a data processing system according to claim 2 characterised in that each of said storage locations (305 to 312) comprises a flip-flop storing one of two binary lock-out values, each flip-flop (305 to 312) being arranged to receive and store, in response to said software instructions, a separate one of the binary positions of a data word.   4. a data processing system according to claims 2 or 3, characterised in that the memory (11) includes mode switching means (31) arranged to permit switching between a mode in which the status register (21) is addressable by a requestor (10) and a mode in which the status register (21) cannot be addressed by a requestor (10).     5. a data processing system according to any preceding claim, characterised in that each requestor port (13a, 13b; 16a, 16b) comprises a data port (13a, 16a), and an access request port (13b,   16b)    leading to a priority circuit (100) which determines priority between access requests from different requestors (10) by means of a priority evaluating circuit (421 to 428, and 410) and causes selection of data at the data ports (13a;   16a)    accordingly, and in that the gating means (411 to 418) are interposed between the access request ports (13b; 16b) and the priority evaluating circuit (421 to 428; 410) such that access requests from requestors (10) associated with disabled gating means (411 to 418) are prevented from being received by the priority evaluation circuit (421 to 428).    6. a data processing system according. to any preceding claim, characterised in that the memory comprises one or more memory modules (11), each having an interface (20) containing the requestor ports (13a, 13b; 16a, 16b).   7. a data processing system according to claim 6, characterised in that the lock-out circuit (21) and the gating means (411 to 418) are contained within their respective memory modules   (11).     
</CLAIMS>
</TEXT>
</DOC>
